datatype Atoms = WAIT
                | SUS
                | DONE

let (* EXPORT START *)

    fun simple_cps () =
        let fun increment count () =
            (SUS, fn () =>
                if count > 9 then (WAIT, fn x => (DONE, (), [fn () => print x]), [fn () => print count, fn () =>
                print "Testing"])
                else (SUS, increment (count + 1), []), [])
        in (SUS, increment 9, [])
    end

    fun simpler_cps () =
        ([], SUS, fn () =>
            ([fn () => print "Suspended...:"], SUS, fn () =>
                ([fn () => print "Give input:"], WAIT, fn x =>
                    ([fn () => print x], SUS, fn () =>
                        ([fn () => print "DONE"], DONE, ())))))

    fun infinite_cps () = 
        (SUS, infinite_cps, [])
    (* EXPORT END *)
    val (stat, step, side) = simpler_cps ()
    val (stat, step, side) = step ()
    val (stat, step, side) = step ()
    val (stat, step, side) = step ()
    val (stat, step, side) = step ()
in print stat
end